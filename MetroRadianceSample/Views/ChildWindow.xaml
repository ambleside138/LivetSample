<metro:MetroWindow x:Class="MetroRadianceSample.Views.ChildWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                    xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
        Background="{DynamicResource ThemeBrushKey}"
		Foreground="{DynamicResource ActiveForegroundBrushKey}"
        xmlns:v="clr-namespace:MetroRadianceSample.Views"
        xmlns:vm="clr-namespace:MetroRadianceSample.ViewModels"
        Title="ChildWindow" Height="350" Width="525">

    
     <i:Interaction.Triggers>
     
     	<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
    	<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
    	<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています --> 
        
        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Grid.ColumnSpan="2"
				metro:MetroWindow.IsCaptionBar="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <metro:CaptionIcon Grid.Column="0">
                    <Ellipse Width="18"
							 Height="18"
							 Fill="{DynamicResource ActiveForegroundBrushKey}" />
                </metro:CaptionIcon>
                <TextBlock Grid.Column="1" HorizontalAlignment="Right" Text="CaptionButton→" />

                <metro:SystemButtons Grid.Column="3"
										VerticalAlignment="Top" />
            </Grid>
        </Border>
        
        <Button Grid.Row="1" Click="Button_Click">Close</Button>
    </Grid>
</metro:MetroWindow>
