<UserControl x:Class="WpfBaseSample.ItemSelectPopup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfBaseSample"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Width="{Binding Width, ElementName=btnShow}"
             Height="{Binding Height, ElementName=btnShow}">
    
    <UserControl.Resources>
        <Style TargetType="Button" x:Key="actionButton">
            <Setter Property="Width" Value="80" />
            <Setter Property="Height" Value="28" />
            <Setter Property="Margin" Value="4" />
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="MaxWidth" Value="80" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}}" />
            <Setter Property="Padding" Value="4" />
        </Style>
    </UserControl.Resources>
    
    <Grid Width="{Binding Width, ElementName=btnShow}">
        <!--Popupを表示するボタン-->
        <Button Name="btnShow" 
                Click="btnShow_Click" 
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <!--ボタンの内容-->
                <ContentPresenter Grid.Column="0" Margin="4" Content="{Binding ButtonContent, RelativeSource={RelativeSource AncestorType={x:Type local:ItemSelectPopup}}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                <!--三角形の表示-->
                <Polygon  Grid.Column="1" Fill="DimGray" Points="4,6 0,0 8,0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,4,4,4"/>
            </Grid>
        </Button>

        <!--AllowsTransparencyとPopupAnimationで表示時にスライドアニメーションさせる-->
        <Popup Name="popup"
               StaysOpen="False"
               PlacementTarget="{Binding ElementName=btnShow}"
               IsOpen="False"
               Placement="{Binding Placement, RelativeSource={RelativeSource AncestorType={x:Type local:ItemSelectPopup} }}"
               AllowsTransparency="True"
               PopupAnimation="Slide">
            
            <!--Popup内部に影を描画するためマージンを確保する-->
            <Border BorderBrush="DimGray" BorderThickness="2" Margin="8">
                <Border.BitmapEffect>
                    <DropShadowBitmapEffect Color="#71000000" ShadowDepth="4"/>
                </Border.BitmapEffect>
                
                <Grid Background="White">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    
                    <!--選択肢表示エリア-->
                    <ScrollViewer HorizontalScrollBarVisibility="Hidden" 
                                  VerticalScrollBarVisibility="Auto" 
                                  MaxHeight="{Binding ListBoxMaxHeight, RelativeSource={RelativeSource AncestorType={x:Type local:ItemSelectPopup}}}">
                        <ListBox Name="listBox" ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType={x:Type local:ItemSelectPopup}}}"
                                 SelectionMode="{Binding SelectionMode, RelativeSource={RelativeSource AncestorType={x:Type local:ItemSelectPopup}}}"
                                 SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type local:ItemSelectPopup}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 ItemTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource AncestorType={x:Type local:ItemSelectPopup}}}"
                                 SelectionChanged="listBox_SelectionChanged"
                                 Margin="0">
                        
                            
                            <!--列数指定-->
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="{Binding ColumnCount, RelativeSource={RelativeSource AncestorType={x:Type local:ItemSelectPopup}}}" Margin="4"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            
                            <!--スタイルの指定-->
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter Margin="8" MaxWidth="40"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="Plum" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="LightGray" />
                                        </Trigger>
                                    </Style.Triggers>
                                    
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </ScrollViewer>
                    
                    <!--ボタンエリア-->
                    <Grid Name="gridBottom" Grid.Row="1" HorizontalAlignment="Stretch" Background="LightGray" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        
                        <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                            <Button Name="btnSelectAll" Click="btnSelectAll_Click"  Style="{StaticResource actionButton}" >すべて選択</Button>
                            <Button Name="btnClear" Click="btnClear_Click" Style="{StaticResource actionButton}" >クリア</Button>
                        </StackPanel>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" >
                            <Button Name="btnOK" Style="{StaticResource actionButton}" Click="btnOK_Click" >選択</Button>
                            <!--<Button Name="btnCancel" Style="{StaticResource actionButton}" Click="btnCancel_Click">キャンセル</Button>-->
                        </StackPanel>
                    </Grid>

                </Grid>
            </Border>

        </Popup>
    </Grid>
</UserControl>
