<Window x:Class="SupportTool.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:SupportTool.Views"
        xmlns:vm="clr-namespace:SupportTool.ViewModels"
        Title="MainWindow" Height="350" Width="525">
    
    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
        
    <Window.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Width" Value="80" />
        </Style>
    </Window.Resources>
    
    <i:Interaction.Triggers>
    
    	<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
    	<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
    	<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています --> 
        
        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            
            <!-- ボタンパネル -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="0" Grid.Column="1">
                <Button Content="追加">
                    <i:Interaction.Triggers>
                        <!--<i:EventTrigger EventName="Click">
                            <l:TransitionInteractionMessageAction WindowType="{x:Type v:SupportEditWindow}" Mode="Modal"></l:TransitionInteractionMessageAction>
                        </i:EventTrigger>-->
                        <i:EventTrigger EventName="Click">
                            <l:TransitionInteractionMessageAction WindowType="{x:Type v:SupportEditWindow}" Mode="Modal">
                                
                                <!--<l:DirectInteractionMessage CallbackMethodTarget="{Binding Mode=OneWay}" CallbackMethodName="Delete">
                                    <l:ConfirmationMessage Button="OKCancel" Caption="確認" Text="削除してもいいですか" />
                                </l:DirectInteractionMessage>-->
                            </l:TransitionInteractionMessageAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </Button>
                <Button>編集</Button>
                <Button>削除</Button>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            
            <ListView Grid.Column="0"></ListView>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="4" Background="DarkBlue"></GridSplitter>
            <TextBlock Grid.Column="1" Background="AliceBlue" Margin="4,0,0,0"></TextBlock>
        </Grid>

        
        
    </Grid>
</Window>
